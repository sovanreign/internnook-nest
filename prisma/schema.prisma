// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum Role {
  Student
  Coordinator
  Company
  Admin
}

enum StudentStatus {
  Looking
  Signing
  Hired
}

enum ApplicationStatus {
  Applied
  Reviewing
  Hired
  Rejected
  Withdrawn
}

enum MoaStatus {
  Pending
  Completed
}


model User {
  id        Int   @id @default(autoincrement())
  email     String   @unique
  password  String
  role Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  student Student?
  coordinator Coordinator?
  company Company?
}

model Student {
  userId Int @id
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  firstName String
  lastName String
  bio String?
  school String
  program String
  resumeUrl String?
  coordinatorId Int
  coordinator Coordinator @relation(fields: [coordinatorId], references: [userId])
  status StudentStatus @default(Looking)
  applications Application[]
  moas MOA[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Coordinator {
  userId Int @id
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  firstName String
  lastName String
  bio String?
  school String
  department String
  inviteCode String @unique
  students Student[]
  moas MOA[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Company {
  userId Int @id
  user   User @relation(fields: [userId], references: [id], onDelete: Cascade)
  name String
  bio String?
  logoUrl String
  industry String
  address String
  internships Internship[]
  moas MOA[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Internship {
  id Int @id @default(autoincrement())
  position String
  shortInfo String
  description String
  companyId Int
  company Company @relation(fields: [companyId], references: [userId])
  isOpen Boolean @default(true)
  applications Application[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Application {
  id Int @id @default(autoincrement())
  studentId Int
  student Student @relation(fields: [studentId], references: [userId])
  internshipId Int
  internship Internship @relation(fields: [internshipId], references: [id])
  status ApplicationStatus @default(Applied)
  moas MOA[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MOA {
  id Int @id @default(autoincrement())
  studentId Int
  student Student @relation(fields: [studentId], references: [userId])
  coordinatorId Int
  coordinator Coordinator @relation(fields: [coordinatorId], references: [userId])
  companyId Int
  company Company @relation(fields: [companyId], references: [userId])
  applicationId Int
  application Application @relation(fields: [applicationId], references: [id])
  studentSigned Boolean @default(false)
  coordinatorSigned Boolean @default(false) 
  companySigned Boolean @default(false) 
  status MoaStatus @default(Pending)
  studentSlug String?
  coordinatorSlug String?
  companySlug String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}
